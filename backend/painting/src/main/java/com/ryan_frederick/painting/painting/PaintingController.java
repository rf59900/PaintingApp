package com.ryan_frederick.painting.painting;

import com.ryan_frederick.painting.user.User;
import com.ryan_frederick.painting.user.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import java.time.LocalDateTime;
import java.util.List;

@RestController("/painting")
public class PaintingController {

    @Autowired
    private final PaintingRepository paintingRepository;

    @Autowired
    private final UserRepository userRepository;


    public PaintingController(PaintingRepository paintingRepository, UserRepository userRepository) {
        this.paintingRepository = paintingRepository;
        this.userRepository = userRepository;
    }

    @GetMapping("")
    List<Painting> findAllPaintings() {
        return paintingRepository.findAllPaintings();
    }

    // only logged in users can create paintings
    @PreAuthorize("hasRole('ROLE_USER')")
    @ResponseStatus(HttpStatus.OK)
    @PostMapping("")
    void createPainting(CreatePaintingRequest createPaintingRequest, Authentication authentication) {
        String username = authentication.getName();

        // get id of user who created the painting
        Integer id = userRepository.findUserByUsername(username).map(User::id).orElse(null);

        // TODO: use aws S3 SDK to upload image data link to s3 and get autogenerated image name back
        String imageName = "placeholder.jpg";

        Painting paintingToAdd = new Painting(
                null,
                createPaintingRequest.title(),
                createPaintingRequest.description(),
                LocalDateTime.now(),
                5,
                imageName
        );

        paintingRepository.createPainting(paintingToAdd, id);
    }
}
